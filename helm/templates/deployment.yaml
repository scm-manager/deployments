apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "scm-manager.fullname" . }}
  labels:
    app: {{ include "scm-manager.name" . }}
    chart: {{ include "scm-manager.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1 # could not be scaled
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "scm-manager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "scm-manager.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: volume-permissions
        image: alpine:3.8
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'chown 1000:1000 /data']
        volumeMounts:
        - name: data
          mountPath: /data
      {{- if .Values.plugins }}
      - name: install-plugins
        image: alpine:3.8
        imagePullPolicy: IfNotPresent
        command: ['sh', '/scripts/install-plugins.sh']
        volumeMounts:
        - name: data
          mountPath: /data
        - name: scripts
          mountPath: /scripts
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.ssh.enabled }}
            - name: ssh
              containerPort: {{ .Values.ssh.port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /scm
              port: http
          readinessProbe:
            httpGet:
              path: /scm
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: data
            mountPath: /var/lib/scm
          - name: config
            mountPath: /opt/scm-server/conf
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "scm-manager.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: config
        configMap: 
          name: {{ include "scm-manager.fullname" . }}
      {{- if .Values.plugins }}
      - name: scripts
        configMap: 
          name: {{ include "scm-manager.fullname" . }}-scripts
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
